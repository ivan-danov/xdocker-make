#!/bin/bash

#*******************************************************************************
#*                                xdocker example                              *
#*-----------------------------------------------------------------------------*
#*                                                                             *
#* Copyright (c) 2023 Ivan Danov                                               *
#*                                                                             *
#* MIT License                                                                 *
#*                                                                             *
#* Permission is hereby granted, free of charge, to any person obtaining a     *
#* copy of this software and associated documentation files (the "Software"),  *
#* to deal in the Software without restriction, including without limitation   *
#* the rights to use, copy, modify, merge, publish, distribute, sublicense,    *
#* and/or sell copies of the Software, and to permit persons to whom the       *
#* Software is furnished to do so, subject to the following conditions:        *
#*                                                                             *
#* The above copyright notice and this permission notice shall be included     *
#* in all copies or substantial portions of the Software.                      *
#*                                                                             *
#* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS     *
#* OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, *
#* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *
#* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      *
#* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     *
#* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         *
#* DEALINGS IN THE SOFTWARE.                                                   *
#*******************************************************************************

# For Vekatech VK-RZV2L v2 board
# https://vekatech.com/products2.php?id=2

# DOWNLOAD_URL="https://vekatech.com/FIXME"
# DOWNLOAD_V_URL="FIXME"
# DOWNLOAD_FILE="debian-bookworm-vkrzv2l.img.xz"

DOWNLOAD_FILE="debian-bookworm-vkrzv2l.img.xz"

# shellcheck disable=SC2034 # appears unused
SKIP_ERRORS=false

# shellcheck disable=SC2034 # appears unused
DOCKER_IMAGE_NAME="xdockermake/vkrzv2l-bookworm-devel"
# shellcheck disable=SC2034 # appears unused
DOCKER_IMAGE_VERS="12"

# shellcheck disable=SC2034
OS_NAME="debian"
OS_DISTRO="vekatech-vkrzv2l-bookworm"

# shellcheck disable=SC2034 # appears unused
DOCKER_FROM="scratch"

DOCKER_REPO="xdockermake"

IMAGE_TYPE=devel # test, release
# shellcheck disable=SC2034
CONTAINER_NAME="${DOCKER_REPO}/${OS_DISTRO}-${IMAGE_TYPE}"
CONTAINER_VERSION="1.0-$(date +'%Y%m%d-%H%M%S')"
# shellcheck disable=SC2034
CONTAINER_TAG="${CONTAINER_VERSION}"

# shellcheck disable=SC2034
MAINTAINER="XDockerMake"

# shellcheck disable=SC2034
TIMEZONE_PATH=Europe/Sofia

# use http://old-releases.ubuntu.com/ubuntu/ apt repositories
# shellcheck disable=SC2034
OLD_RELEASE_REPO=0

# extra packages to install
# shellcheck disable=SC2034
DEB_PACKAGES="\
	build-essential \
	bc \
	libc6-dev \
	pkg-config \
	git \
	wget \
	lintian \
	git2cl \
	lsb-release \
	binutils-dev \
	dpkg-dev \
	graphviz \
	clang \
	clang-format \
	clang-tidy \
	clang-tools \
	cloc \
	cppcheck \
	doxygen \
	make \
	minify \
	pkg-config \
	yui-compressor \
	lintian \
	sudo \
	composer php-gd php-mysql php-pgsql \
	\
	binutils-dev \
	dpkg-dev \
	libavcodec-dev \
	libavdevice-dev \
	libavfilter-dev \
	libavformat-dev \
	libavutil-dev \
	libcairo2-dev \
	libcurl4-openssl-dev \
	libfcgi-dev \
	libfreetype6-dev \
	libgmp-dev \
	libjansson-dev \
	libjpeg-dev \
	libmariadb-dev \
	libmariadb-dev-compat \
	libmicrohttpd-dev \
	libminizip-dev \
	libpng-dev \
	libpq-dev \
	libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev \
	libssl-dev \
	libswresample-dev \
	libswscale-dev \
	libts-dev \
	libusb-1.0-0-dev \
	libx11-dev \
	libxext-dev \
	libxi-dev \
	libxrandr-dev \
	linux-libc-dev \
	uuid-dev \
	zlib1g-dev \
	"

LODEV=""
conftmpdir=$(mktemp -d -p "${OUTPUT_DIR}")
if [[ ! "$conftmpdir" || ! -d "$conftmpdir" ]]; then
	die "💥 Could not create temporary working directory."
else
	log "📁 Created temporary working directory $conftmpdir"
fi

log "🌎 Install qemu-user-static"
sudo apt -qq -y install qemu-user-static

xdocker_conf_cleanup() {
	log "🚽 conf cleanup"

	if [ -b "${LODEV}p2" ]; then
		sudo umount "${LODEV}p2" || true
	fi
	if [ -b "${LODEV}" ]; then
		sudo losetup -d "${LODEV}" || true
	fi
	if [ -d "${conftmpdir}" ]; then
		rm -vrf "${conftmpdir}"
		log "🚽 Deleted temporary working directory ${conftmpdir}"
	fi
}

IMAGE_FILE="${conftmpdir}/debian-bookworm-vkrzv2l.img"

# log "🌎 Download OS image"
# wget "${DOWNLOAD_URL}/${DOWNLOAD_V_URL}/${DOWNLOAD_FILE}" -O "${conftmpdir}/${DOWNLOAD_FILE}"

if [ ! -f ${DOWNLOAD_FILE} ]; then
	die "💥 Image file ${DOWNLOAD_FILE} not found."
fi

log "🔧 Extract OS image"
rm -f "${IMAGE_FILE}"
# xz --decompress --stdout "${conftmpdir}/${DOWNLOAD_FILE}" > "${IMAGE_FILE}"

xz --decompress --stdout "${DOWNLOAD_FILE}" > "${IMAGE_FILE}"

xdocker_make_config() {
	tmpdir="$1"

	log "🔧 Extract OS"
	rm -rf "${tmpdir}/p2"
	mkdir "${tmpdir}/p2"

	log "🔧 Mount OS image"
	LODEV=$(sudo losetup -f)
	sudo losetup -P "${LODEV}" "${IMAGE_FILE}"
	rm -rf "${tmpdir}/p2"
	mkdir "${tmpdir}/p2"
	sudo mount "${LODEV}p2" "${tmpdir}/p2"
}

# shellcheck disable=SC2034 # appears unused
SUDO=sudo
# shellcheck disable=SC2034 # appears unused
DOCKERFILE_TAGS="ADD p2 /"
